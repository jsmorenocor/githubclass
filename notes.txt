                                   NOTES OF GIT
BASIC NAVEGATION COMANDS:

-pwd: shows me where am I. 
-cat: Show the content of a file
-cd: change library
-ls: show files that are in the folder
-git status: it tells the actual startus of the library 
-git log (name): show the history of the folder.
-git show (name): show detaild history of file.
-git log --all --graph : show a detail history. 
-git log --all --graph --decorate --oneline : show a detail history compresed.
-SHORTCUT: alias name= (comand) ex: alias arbolito git log --all --graph --decorate --oneline 
CONFIGURATION OF GIT

- git config --list : show the actual configuration.
- git config --global : it lets me change a global configuration 
  ex:config --global user.email "more@gmail.com"

GIT BASIC OPERATIONS

-commit -m "" : it creates nodes that have weird names like A22ddc34vedefv4.
-git diff (weird name) (weird name) : it compares both files.
-git reset (name) (hard/soft) : this comand deletes the comits and puts the HEAD on the selected node.
-git checkout (name) : It puts HEAD on a desire comit
-git checkout (name) (file) : It return some file to an old version.
-git switch -c (newname): it creates a new branch from an old comit, use after checkout.
-git pull origin (HEAD(rama con la que se va a fusionar))
-git push origin (HEAD (Rama a la que voy a adjuntar))
CONECTING GIT and GITHUB

1. create the link: git remote add (new name A) (https repository link)
2. verify the link: git remote -v
3. from git you must pull the documents: git pull (newname A) (newname HEAD) 
4. Dont forget to put --allow-unrelated-histories to force the merge.

CREATING A PRIVATE KEY SSH
note: This is my private key, dont share with no body.

1.Verify that your email is the same in git as it is in GITHUB.
 if no, change it with git config --global user.email
2.Create a ssh key write it on GITBASH:
  ssh-keygen -t rsa -b 4096 -C "email"
3. id_rsa.pub is the public key that i can share. 
4. Verify that the program that links the keys is working fine: 
In GITBASH put: $ eval $(ssh-agent -s), it must show you a answer like 2226. 
5. Tell the sistem to add the private key. 
In GITBASH put: ssh-add /c/Users/Acer/.ssh/id_rsa
the right answer is: Identity added
6. Go to GITHUB and add the public KEY on configuracion. 

NOTE: Each computer mush have ther own private KEY. 
7. Change your remote link. 
   In GITBASH you must put git remote set-url origin (URL from HITHUB SSH)